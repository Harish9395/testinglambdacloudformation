pipeline:
  name: harnessDeploycodepipeline
  identifier: harnessDeploycodepipeline
  projectIdentifier: Test
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: github
        repoName: testinglambdacloudformation
        build: <+input>
  stages:
    - stage:
        name: Git
        identifier: Git
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: zip -9 Lambda.zip Lambda.yaml
              - step:
                  type: Run
                  name: Run_2
                  identifier: Run_2
                  spec:
                    shell: Sh
                    command: "aws configure set aws_access_key_id <+pipeline.variables.Accesskey>\r\naws configure set aws_secret_access_key $Secretkey\r\naws s3 cp Lambda.zip s3://mytestlambdas3code/\r\naws s3 cp InfraCodepipeline.yml s3://mytestlambdas3code/"
    - stage:
        name: DeployStack
        identifier: DeployStack
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: CreateStack
                  name: CreateStack_1
                  identifier: CreateStack_1
                  spec:
                    provisionerIdentifier: InfraCodepipeline
                    configuration:
                      stackName: InfraCodepipeline-Testing
                      connectorRef: Aws
                      region: us-east-2
                      templateFile:
                        type: S3URL
                        spec:
                          templateUrl: https://mytestlambdas3code.s3.us-east-2.amazonaws.com/InfraCodepipeline.yml
                      roleArn: ""
                  timeout: 10m
        tags: {}
  variables:
    - name: Accesskey
      type: Secret
      description: ""
      required: false
      value: Accesskey
